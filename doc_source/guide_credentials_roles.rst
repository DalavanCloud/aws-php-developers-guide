.. Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0
   International License (the "License"). You may not use this file except in compliance with the
   License. A copy of the License is located at http://creativecommons.org/licenses/by-nc-sa/4.0/.

   This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   either express or implied. See the License for the specific language governing permissions and
   limitations under the License.

============================================
Using Credentials from Environment Variables
============================================

.. meta::
   :description: How to load credentials for AWS using the AWS SDK for PHP.
   :keywords: configuration, specify region, region, credentials, proxy


Using |IAM| Roles for |EC2| Instances
-------------------------------------

Using |IAM| roles is the preferred technique for providing credentials to
applications running on |EC2|. |IAM| roles remove the need to worry about
credential management from your application. They allow an instance to "assume"
a role by retrieving temporary credentials from the EC2 instance's metadata
server. These temporary credentials, often referred to as
**instance profile credentials**, allow access to the actions and resources
that the role's policy allows.

When launching an EC2 instance, you can choose to associate it with an IAM
role. Any application running on that EC2 instance is then allowed to assume
the associated role. |EC2| handles all the legwork of securely
authenticating instances to the |IAM| service to assume the role, and periodically
refreshing the retrieved role credentials. This keeps your application secure with
almost no work on your part.

If you don't explicitly provide credentials to the client object and no
environment variable credentials are available, the SDK attempts to retrieve
instance profile credentials from an |EC2| instance metadata server. These
credentials are available only when running on |EC2| instances that have
been configured with an |IAM| role.

.. note::

    Instance profile credentials and other temporary credentials generated by
    the |STSlong| (|STS|) are not supported by every
    service. To determine whether the service you are using supports temporary
    credentials, see :iam-ug:`AWS Services that Support AWS STS <reference_aws-services-that-work-with-iam>`.

    To avoid hitting the metadata service every time, an instance of ``Aws\CacheInterface``
    can be passed in as the ``'credentials'`` option to a client constructor. This lets the SDK
    use cached instance profile credentials instead. For details, see :doc:`guide_configuration`.

For more information, see :EC2-ug:`IAM Roles for Amazon EC2<iam-roles-for-amazon-ec2>`.

   
Using |IAM| Roles for |ECSlong| Tasks
-------------------------------------

With |IAM| roles for |ECS| tasks, you can specify an |IAM| role that can be
used by the containers in a task. This provides a strategy for managing credentials
for your applications to use, similar to the way that |EC2| instance profiles
provide credentials to EC2 instances.

Instead of creating and distributing your AWS credentials to the containers or
using the EC2 instanceâ€™s role, you can associate an |IAM| role with an ECS task definition or
``RunTask`` :aws-php-class:`API </api-ecs-2014-11-13.html#runtask>` operation.

.. note::

    Instance profile credentials and other temporary credentials generated by
    the |STS|) are not supported by every
    service. To determine whether the service you are using supports temporary
    credentials, see :iam-ug:`AWS Services that Support AWS STS <reference_aws-services-that-work-with-iam>`.

For more information, see :EC2-ug:`IAM Roles for Amazon EC2 Container Service Tasks<task-iam-roles>`.

